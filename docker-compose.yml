version: '3.6'
services:
  nginx:
      container_name: nginx
      image: nginx
      restart: unless-stopped
      ports:
      - "21451:80"
      volumes:
      - ./volumes/web/code:/code
      - ./volumes/web/conf:/etc/nginx/conf.d
      links:
      - php

  php:
      container_name: php
      image: php:fpm
      restart: unless-stopped
      volumes:
      - ./volumes/web/code:/code
      ports:
      - "9001:9000"

  postgres:
      container_name: postgres
      image: postgres
      restart: unless-stopped
      volumes:
      - "./volumes/postgres/data:/var/lib/postgresql/data"
      environment:
      - POSTGRES_USER={pg_user}
      - POSTGRES_DB={pg_db}
      - POSTGRES_PASSWORD={pg_pass}
      ports:
      - "{pg_port}:5432"
      networks:
      - iotstack_nw
  
  pgbackups:
      container_name: pgbackups
      image: prodrigestivill/postgres-backup-local
      restart: unless-stopped
      ports:
      - "9090:8080"
      volumes:
      - "./volumes/pgbackups/backups:/backups"
      links:
      - postgres
      depends_on:
      - postgres
      environment:
      - POSTGRES_HOST={pg_host}
      - POSTGRES_DB={pg_db}
      - POSTGRES_USER={pg_user}
      - POSTGRES_PASSWORD={pg_pass}
      - POSTGRES_PORT={pg_port}
      - POSTGRES_EXTRA_OPTS=-Z6 --schema=public --blobs
      - SCHEDULE=@daily
      - BACKUP_KEEP_DAYS=7
      - BACKUP_KEEP_WEEKS=4
      - BACKUP_KEEP_MONTHS=6
      - HEALTHCHECK_PORT=8080

  prest:
      container_name: prest
      build: ./services/prest/.
      restart: unless-stopped
      links:
      - "postgres:postgres"
      environment:
      - PREST_DEBUG=true # remove comment for enable DEBUG mode (disable JWT)
      - PREST_PG_HOST={pg_host}
      - PREST_PG_USER={pg_user}
      - PREST_PG_PASS={pg_pass}
      - PREST_PG_DATABASE={pg_db}
      - PREST_PG_PORT={pg_port}
      - PREST_JWT_DEFAULT=false # remove if need jwt
      - PREST_SSL_MODE=disable
      depends_on:
      - postgres
      ports:
      - "3000:3000"

  node:
      container_name: node
      build: ./services/node
      restart: unless-stopped
      user: "node"
      expose:
      - "8080"
      ports:
      - "7070:8080"
      

  grafana:
      container_name: grafana
      image: grafana/grafana
      restart: unless-stopped
      user: "0"
      ports:
      - "3001:3000"
      environment:
      - GF_PATHS_DATA=/var/lib/grafana
      - GF_PATHS_LOGS=/var/log/grafana
      volumes:
      - ./volumes/grafana/data:/var/lib/grafana
      - ./volumes/grafana/log:/var/log/grafana
      networks:
      - iotstack_nw

  home_assistant:
      container_name: home_assistant
      image: homeassistant/home-assistant:stable
      restart: unless-stopped
      ports:
      - "8123:8123"
      volumes:
      - /etc/localtime:/etc/localtime:ro
      - ./volumes/home_assistant:/config
      network_mode: host

  homebridge:
      container_name: homebridge
      image: oznu/homebridge:no-avahi-arm32v6
      restart: unless-stopped
      environment:
      - TZ=Etc/UTC
      - PGID=1000
      - PUID=1000
      - HOMEBRIDGE_CONFIG_UI=1
      - HOMEBRIDGE_CONFIG_UI_PORT=4040
      volumes:
      - ./volumes/homebridge:/homebridge
      ports:
      - "4040:4040"
      network_mode: host

  portainer-ce:
      container_name: portainer-ce
      image: portainer/portainer-ce
      restart: unless-stopped
      ports:
      - "8000:8000"
      - "9000:9000"
      volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./volumes/portainer-ce/data:/data

  nodered:
      container_name: nodered
      build: ./services/nodered/.
      restart: unless-stopped
      user: "0"
      privileged: true
      environment:
      - TZ=Etc/UTC
      ports:
      - "1880:1880"
      volumes:
      - ./volumes/nodered/data:/data
      - /var/run/docker.sock:/var/run/docker.sock
      - /var/run/dbus/system_bus_socket:/var/run/dbus/system_bus_socket
      devices:
      - "/dev/ttyAMA0:/dev/ttyAMA0"
      - "/dev/vcio:/dev/vcio"
      - "/dev/gpiomem:/dev/gpiomem"
      networks:
      - iotstack_nw

  zigbee2mqtt:
      container_name: zigbee2mqtt
      image: koenkk/zigbee2mqtt
      volumes:
      - ./volumes/zigbee2mqtt/data:/app/data
      devices:
      - /dev/ttyAMA0:/dev/ttyACM0
      #- /dev/ttyUSB0:/dev/ttyACM0 # Electrolama zig-a-zig-ah! (zzh!) maybe other as well
      restart: unless-stopped
      network_mode: host

  zigbee2mqtt_assistant:
      container_name: zigbee2mqtt_assistant
      image: carldebilly/zigbee2mqttassistant
      restart: unless-stopped
      ports:
      - "8880:88"
      environment:
      - VIRTUAL_HOST=~^zigbee2mqtt_assistant\..*\.xip\.io
      - Z2MA_SETTINGS__MQTTSERVER=mosquitto
      - VIRTUAL_PORT=8880

  networks:
  iotstack_nw: # Exposed by your host.
      # external: true
      name: IOTstack_Net
      driver: bridge
      ipam:
      driver: default
      config:
      - subnet: 10.77.60.0/24
          # - gateway: 10.77.60.1

  iotstack_nw_internal: # For interservice communication. No access to outside
      name: IOTstack_Net_Internal
      driver: bridge
      internal: true
      ipam:
      driver: default
      config:
      - subnet: 10.77.76.0/24
          # - gateway: 10.77.76.1

  vpn_nw: # Network specifically for VPN
      name: IOTstack_VPN
      driver: bridge
      ipam:
      driver: default
      config:
      - subnet: 10.77.88.0/24
          # - gateway: 192.18.200.1

  nextcloud_internal: # Network for NextCloud service
      name: IOTstack_NextCloud
      driver: bridge
      internal: true

  # default:
  #   external: true
  #   name: iotstack_nw

  # hosts_nw:
  #   driver: hosts
